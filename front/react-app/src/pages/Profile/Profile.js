import React, { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import './Profile.css';

const Profile = () => {
  const { user, logout } = useAuth();
  const [isEditing, setIsEditing] = useState(false);
  const [formData, setFormData] = useState({
    username: '',
    email: '',
    role: '',
    company_id: null
  });
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  useEffect(() => {
    if (user) {
      setFormData({
        username: user.username || '',
        email: user.email || '',
        role: user.role || '',
        company_id: user.company_id || null
      });
    }
  }, [user]);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSave = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª—è
    setSuccess('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
    setIsEditing(false);
  };

  const handleCancel = () => {
    setFormData({
      username: user.username || '',
      email: user.email || '',
      role: user.role || '',
      company_id: user.company_id || null
    });
    setIsEditing(false);
    setError('');
    setSuccess('');
  };

  const getRoleLabel = (role) => {
    const roleLabels = {
      admin: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      manager: '–ú–µ–Ω–µ–¥–∂–µ—Ä',
      engineer: '–ò–Ω–∂–µ–Ω–µ—Ä',
      client: '–ö–ª–∏–µ–Ω—Ç'
    };
    return roleLabels[role] || role;
  };

  const getRoleIcon = (role) => {
    const roleIcons = {
      admin: 'üëë',
      manager: 'üë∑‚Äç‚ôÇÔ∏è',
      engineer: 'üîß',
      client: 'üë§'
    };
    return roleIcons[role] || 'üë§';
  };

  const getRoleDescription = (role) => {
    const descriptions = {
      admin: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã',
      manager: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤',
      engineer: '–†–∞–±–æ—Ç–∞ —Å –¥–µ—Ñ–µ–∫—Ç–∞–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏',
      client: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö'
    };
    return descriptions[role] || '';
  };

  if (!user) {
    return (
      <div className="loading">
        <div className="spinner"></div>
      </div>
    );
  }

  return (
    <div className="profile">
      <div className="profile-header">
        <h1 className="page-title">
          <span className="profile-icon">üë§</span>
          –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
        </h1>
        <div className="profile-actions">
          {!isEditing ? (
            <button 
              className="btn btn-primary"
              onClick={() => setIsEditing(true)}
            >
              <span className="btn-icon">‚úèÔ∏è</span>
              –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </button>
          ) : (
            <div className="edit-actions">
              <button 
                className="btn btn-outline"
                onClick={handleCancel}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button 
                className="btn btn-success"
                onClick={handleSave}
              >
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
            </div>
          )}
        </div>
      </div>

      {error && (
        <div className="error-message">
          <span className="error-icon">‚ö†Ô∏è</span>
          {error}
        </div>
      )}

      {success && (
        <div className="success-message">
          <span className="success-icon">‚úÖ</span>
          {success}
        </div>
      )}

      <div className="profile-content">
        <div className="profile-card">
          <div className="profile-avatar">
            <div className="avatar-circle">
              <span className="avatar-icon">{getRoleIcon(user.role)}</span>
            </div>
            <div className="avatar-info">
              <h2 className="user-name">{user.username}</h2>
              <p className="user-role">{getRoleLabel(user.role)}</p>
            </div>
          </div>

          <div className="profile-details">
            <div className="detail-section">
              <h3 className="section-title">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
              <div className="detail-grid">
                <div className="detail-item">
                  <label className="detail-label">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                  {isEditing ? (
                    <input
                      type="text"
                      name="username"
                      value={formData.username}
                      onChange={handleChange}
                      className="form-input"
                    />
                  ) : (
                    <span className="detail-value">{user.username}</span>
                  )}
                </div>

                <div className="detail-item">
                  <label className="detail-label">Email</label>
                  {isEditing ? (
                    <input
                      type="email"
                      name="email"
                      value={formData.email}
                      onChange={handleChange}
                      className="form-input"
                    />
                  ) : (
                    <span className="detail-value">{user.email}</span>
                  )}
                </div>

                <div className="detail-item">
                  <label className="detail-label">–†–æ–ª—å</label>
                  <span className="detail-value role-badge">
                    <span className="role-icon">{getRoleIcon(user.role)}</span>
                    {getRoleLabel(user.role)}
                  </span>
                </div>

                <div className="detail-item">
                  <label className="detail-label">ID –∫–æ–º–ø–∞–Ω–∏–∏</label>
                  {isEditing ? (
                    <input
                      type="number"
                      name="company_id"
                      value={formData.company_id || ''}
                      onChange={handleChange}
                      className="form-input"
                    />
                  ) : (
                    <span className="detail-value">
                      {user.company_id ? user.company_id : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'}
                    </span>
                  )}
                </div>
              </div>
            </div>

            <div className="detail-section">
              <h3 className="section-title">–û–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏</h3>
              <div className="role-description">
                <p>{getRoleDescription(user.role)}</p>
              </div>
            </div>

            <div className="detail-section">
              <h3 className="section-title">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
              <div className="stats-grid">
                <div className="stat-item">
                  <span className="stat-icon">üìÖ</span>
                  <div className="stat-content">
                    <div className="stat-number">-</div>
                    <div className="stat-label">–î–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ</div>
                  </div>
                </div>
                <div className="stat-item">
                  <span className="stat-icon">üèóÔ∏è</span>
                  <div className="stat-content">
                    <div className="stat-number">-</div>
                    <div className="stat-label">–ü—Ä–æ–µ–∫—Ç–æ–≤</div>
                  </div>
                </div>
                <div className="stat-item">
                  <span className="stat-icon">üîß</span>
                  <div className="stat-content">
                    <div className="stat-number">-</div>
                    <div className="stat-label">–î–µ—Ñ–µ–∫—Ç–æ–≤</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className="profile-actions-card">
          <h3 className="section-title">–î–µ–π—Å—Ç–≤–∏—è</h3>
          <div className="actions-list">
            <button className="action-btn">
              <span className="action-icon">üîí</span>
              <span className="action-text">–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å</span>
            </button>
            <button className="action-btn">
              <span className="action-icon">üìä</span>
              <span className="action-text">–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span>
            </button>
            <button className="action-btn">
              <span className="action-icon">‚öôÔ∏è</span>
              <span className="action-text">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
            </button>
            <button 
              className="action-btn danger"
              onClick={logout}
            >
              <span className="action-icon">üö™</span>
              <span className="action-text">–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Profile;
